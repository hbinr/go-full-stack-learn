# 应用配置
application:
  organization : "hbstudy.com"         # 组织名
  name : "HBStudy"                     # 应用名称
  module : "dubbogo user-info server"  # 模块
  version : "0.0.1"                    # 版本号
  owner : "dhb"                        # 所属者
  environment : "dev"                  # 部署环境(release:生成环境;dev:开发;test:测试环境)

# 配置中心
config_center:
  protocol: "nacos"                    # 协议类型，支持:nacos,zookeeper,appolo
  address: "127.0.0.1:8848"            # 配置中心启动后暴露的ip:port，需要安装nacos，并启动

# 服务注册中心
registries :
  "nacos-hello-world":                 # 服务注册中心名
    protocol: "nacos"                  # 协议类型，支持:nacos,etcdv3,k8s(需要单独写配置)
    timeout	: "3s"                     # 超时时间
    address: "127.0.0.1:8848"          # 服务中心启动后暴露的ip:port，需要安装nacos，并启动

# REST服务设置 搞不懂为什么设计成配置形式，屎一样，对外服务多了，写的就是裹脚布，又臭又长
# TODO 明天试着结合gin写个REST服务
services:
  "UserProvider":                      # 服务provider名
    # 可以指定多个registry，使用逗号隔开;不指定默认向所有注册中心注册
    registry: "nacos-hello-world"      # 注册中心
    protocol : "rest"                  # 服务协议类型
    # 相当于dubbo.xml中的interface
    interface : "com.ikurento.user.UserProvider"
    loadbalance: "random"              # 负载均衡策略，使用随机策略
    warmup: "100"
    # todo 学习容错https://blog.csdn.net/u011305680/article/details/79730646
    cluster: "failover"                # 失效转移，容错机制，支持:failover;failfast;failback;failsafe
    rest_path: "/UserProvider"         # URL路径，先定义group:/UserProvider
    methods:
      - name: "GetUser"
        rest_path: "/GetUser"          # URL路径:/UserProvider/GetUser
        rest_method: "GET"             # 请求类型
        rest_query_params: "0:id"      # 查询参数，下标:参数名
      - name: "GetUser0"
        rest_path: "/GetUser0/{id}"
        rest_method: "POST"
        rest_query_params: "1:name,2:age"
        rest_path_params: "0:id"       # URI 参数，下标:参数名
        rest_produces: "application/json"  # 解析类型
        rest_consumes: "application/json;charset=utf-8,*/*"  # 解析类型

      - name: "GetUser3"
        rest_path: "/GetUser3"
        rest_method: "GET"
      - name: "GetUsers"
        rest_path: "/GetUsers"
        rest_method: "POST"
        rest_body: 0
      - name: "GetUser1"
        rest_path: "/GetUser1"
        rest_method: "GET"

# 协议类型
protocols:
  "rest":                # REST协议，支持:rest,dubbo,jsonrpc,grpc
    name: "rest"         # REST协议，支持:rest,dubbo,jsonrpc,grpc
    ip: "127.0.0.1"      # REST服务对外暴露的ip
    port: 8081           # REST服务对外暴露的端口

# grpc协议配置
#protocols:
#  "grpc":
#    name: "grpc"
#    port: 20000
#
#
#protocol_conf:
#  grpc:
#    session_number: 700
#    session_timeout: "20s"
#    getty_session_param:
#      compress_encoding: false
#      tcp_no_delay: true
#      tcp_keep_alive: true
#      keep_alive_period: "120s"
#      tcp_r_buf_size: 262144
#      tcp_w_buf_size: 65536
#      pkg_rq_size: 1024
#      pkg_wq_size: 512
#      tcp_read_timeout: "1s"
#      tcp_write_timeout: "5s"
#      wait_timeout: "1s"
#      max_msg_len: 1024
#      session_name: "server"
